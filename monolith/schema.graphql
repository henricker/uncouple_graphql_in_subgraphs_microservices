type Query {
  featuredListings: [Listing!]!
  searchListings(criteria: SearchListingsInput): [Listing]!
  hostListings: [Listing]!
  listing(id: ID!): Listing
  listingAmenities: [Amenity!]!
}

type Mutation {
  createListing(listing: CreateListingInput!): CreateListingResponse!
  updateListing(listingId: ID!, listing: UpdateListingInput!): UpdateListingResponse!
}

interface MutationResponse {
  code: Int!
  success: Boolean!
  message: String!
}

interface User {
  id: ID!
}


type Host implements User @key(fields: "id") {
  id: ID!
}


type Guest implements User @key(fields: "id") {
  id: ID!
}

type Listing @key(fields: "id"){
  id: ID!
  title: String!
  description: String!
  photoThumbnail: String!
  numOfBeds: Int!
  costPerNight: Float!
  locationType: LocationType!
  host: Host!
  amenities: [Amenity]!
  totalCost(checkInDate: String!, checkOutDate: String!): Float!
}


type ReservedDate {
  checkInDate: String!
  checkOutDate: String!
}


type Amenity {
  id: ID!
  category: AmenityCategory!
  name: String!
}


enum AmenityCategory {
  ACCOMMODATION_DETAILS
  SPACE_SURVIVAL
  OUTDOORS
}


enum LocationType {
  SPACESHIP
  HOUSE
  CAMPSITE
  APARTMENT
  ROOM
}


input SearchListingsInput {
  checkInDate: String!
  checkOutDate: String!
  numOfBeds: Int
  page: Int
  limit: Int
  sortBy: SortByCriteria
}


enum SortByCriteria {
  COST_ASC
  COST_DESC
}


input CreateListingInput {
  title: String!
  description: String!
  photoThumbnail: String!
  numOfBeds: Int!
  costPerNight: Float!
  locationType: LocationType!
  amenities: [ID!]!
}


input UpdateListingInput {
  title: String
  description: String
  photoThumbnail: String
  numOfBeds: Int
  costPerNight: Float
  locationType: LocationType
  amenities: [ID]
}

type CreateListingResponse implements MutationResponse {
  code: Int!
  success: Boolean!
  message: String!
  listing: Listing
}


type UpdateListingResponse implements MutationResponse {
  code: Int!
  success: Boolean!
  message: String!
  listing: Listing
}


type Booking @key(fields: "id"){
  id: ID!
  listing: Listing!
  totalPrice: Float!
}

type Review @key(fields: "id"){
  id: ID!
}
